// ***************************************************
// ***************************************************
//
//                  ==============
//                  HEADER SECTION
//                  ==============
//
// The Header section contains meta data of no real
// importance to AI behaviour but possibly of interest
// to players and authors
// ***************************************************
// ***************************************************

// author of this decision tree (spaces (currently )not
// allowed)
@author = "Adrian"

// version of this tree
@version = "1"

// ***************************************************
// ***************************************************
//
//                  ============
//                  BODY SECTION
//                  ============
//
// The Body section contains all the information
// needed to build a decision tree in memory. There is
// no technical difference between a "tree" and a
// "node" so trees can easily be linked together. This
// functionality is not yet present in the parser, but
// can be done in code.
// ***************************************************
// ***************************************************

// need to presepecify the total number of nodes in
// in a decision tree for memory management purposes
numnodes = 11 

// The actual node definitions and there interlinking
&0:func = isPenalty yes = 1 no = 8
//////////////////////////////////////////////////////
//////           Penalty Behaviour          //////////
//////////////////////////////////////////////////////
&1:func = concededPenalty yes = 2 no = 6
&2:func = oppHasAllTouches yes = 3 no = 4
#3:func = stop
&4:func = ballIsStationary yes = 5 no = 3
#5:func = runToBall
&6:func = touchingBall yes = 7 no = 5
#7:func = shoot
//////////////////////////////////////////////////////
////////       Non Penalty Behaviour        //////////
//////////////////////////////////////////////////////
&8:func = ballInOwnHalf yes = 9 no = 3
&9:func = hasTouches yes = 10 no = 3
&10:func = canScore yes = 6 no = 3
end
